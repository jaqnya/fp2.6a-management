*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ 07/31/18            CUOTCOMP.SPR               11:27:15 ³
*       ³                                                         ³
*       ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
*       ³                                                         ³
*       ³ Nombre del autor                                        ³
*       ³                                                         ³
*       ³ Copyright (c) 2018 Nombre de la empresa                 ³
*       ³ Direcci¢n                                               ³
*       ³ Ciudad,     C.P.                                        ³
*       ³ Pa¡s                                              ³
*       ³                                                         ³
*       ³ Description:                                            ³
*       ³ Este programa lo ha generado autom ticamente GENSCRN.    ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PARAMETERS m.tipodocu

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³   CUOTCOMP/MS-DOS C¢digo de configuraci¢n - SECCION 1   ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

#REGION 1

IF PARAMETERS() < 1
   WAIT WINDOW "­ NO SE HAN PASADO SUFICIENTES PARAMETROS !"
   RETURN .F.
ENDIF

IF INLIST(m.tipodocu, 1, 3, 4, 5, 7)
   DO save_invoice
   RETURN
ENDIF


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³             MS-DOS Definiciones de ventana              ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

IF NOT WEXIST("_59e0ojtah")
	DEFINE WINDOW _59e0ojtah ;
		FROM INT((SROW()-17)/2),INT((SCOL()-56)/2) ;
		TO INT((SROW()-17)/2)+16,INT((SCOL()-56)/2)+55 ;
		TITLE " CUOTAS DE COMPRAS " ;
		NOFLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		COLOR SCHEME 1
ENDIF


*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³   CUOTCOMP/MS-DOS C¢digo de configuraci¢n - SECCION 2   ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

#REGION 1
PRIVATE pcCondCompra, pnEntrInicial, m.consignaci

DIMENSION paQtyCuota[1]

paQtyCuota    = ""
pcCondCompra  = ""
pnEntrInicial = 0
m.consignaci  = "N"

PUSH KEY CLEAR

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³        CUOTCOMP/MS-DOS Distribuci¢n de pantalla         ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

#REGION 1
IF WVISIBLE("_59e0ojtah")
	ACTIVATE WINDOW _59e0ojtah SAME
ELSE
	ACTIVATE WINDOW _59e0ojtah NOSHOW
ENDIF
@ 4,3 SAY "Consignaci¢n ?.:" ;
	SIZE 1,16, 0
@ 3,3 SAY "Entrega Inicial:" ;
	SIZE 1,16, 0
@ 6,1 TO 14,38
@ 7,27 SAY "Importe" ;
	SIZE 1,7, 0
@ 7,12 SAY "Fecha" ;
	SIZE 1,5, 0
@ 7,4 SAY "N§" ;
	SIZE 1,2, 0
@ 6,15 SAY " CUOTAS " ;
	SIZE 1,8, 0 ;
	COLOR W/N     
@ 1,3 SAY "Cant. de Cuotas:" ;
	SIZE 1,16, 0
@ 2,3 SAY "Vcto. 1¦ Cuota.:" ;
	SIZE 1,16, 0
@ 2,24 SAY "d¡as" ;
	SIZE 1,4, 0
@ 1,20 GET pnQtyCuotas ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	VALID _59e0ojtal()
@ 2,20 GET pnInterval ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	VALID _59e0ojtam()
@ 3,20 GET pnEntrInicial ;
	SIZE 1,14 ;
	DEFAULT 0 ;
	PICTURE "999,999,999.99" ;
	VALID _59e0ojtan()
@ 4,20 GET m.consignaci ;
	SIZE 1,1 ;
	DEFAULT " " ;
	PICTURE "@A!" ;
	WHEN _59e0ojtao() ;
	VALID _59e0ojtap()
@ 8,2 GET lstQtyCuotas ;
 	PICTURE "@&N" ;
	FROM paQtyCuota ;
	SIZE 6,36 ;
	DEFAULT 1 ;
	VALID _59e0ojtaq() ;
	COLOR SCHEME 14
@ 7,40 GET m.save ;
	PICTURE "@*VN \!\<Grabar" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _59e0ojtar()
@ 9,40 GET m.cancel ;
	PICTURE "@*VN \?\<Cancelar" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _59e0ojtas()
@ 11,40 GET m.edit ;
	PICTURE "@*VN \?\<Modificar" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _59e0ojtat()
@ 13,40 GET m.gethelp ;
	PICTURE "@*VN A\<yuda" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _59e0ojtau()

IF NOT WVISIBLE("_59e0ojtah")
	ACTIVATE WINDOW _59e0ojtah
ENDIF


*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³    MS-DOSREAD contiene cl usulas de SCREEN cuotcomp     ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

READ CYCLE ;
	MODAL COLOR , W+/BG

RELEASE WINDOW _59e0ojtah

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ CUOTCOMP/MS-DOS Procedimientos y funciones de soporte   ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*

#REGION 1
PROCEDURE save_invoice
   PRIVATE lActualizar, lDescuento, lVerificar, nDescLineal, nDecimales, arch_temp
   STORE .F.      TO lActualizar, lDescuento, lVerificar
   STORE 0        TO nDescLineal, nDecimales
   STORE SPACE(1) TO arch_temp

   nDecimales = IIF(m.moneda = 1, 0, 2)

   SELECT tmpdetcomp
   SCAN ALL
      nDescLineal = nDescLineal + ROUND(ROUND(precio * cantidad, nDecimales) * pdescuento / 100, nDecimales)
   ENDSCAN

   lActualizar = yes_no("DESEA ACTUALIZAR LOS PRECIOS DE VENTA ? [S/N]", .F.)

   IF lActualizar THEN
      lVerificar = yes_no("DESEA VERIFICAR LOS PRECIOS DE VENTA ? [S/N]", .F.)
   ENDIF

   IF lActualizar .AND. (m.importdesc > 0 .OR. nDescLineal > 0)
      lDescuento = yes_no("INCLUIR EL DESCUENTO EN EL PRECIO DE VENTA ? [S/N]", .F.)
   ENDIF

   IF plEditing THEN
      DO delete_invoice
   ENDIF

   DO save_header
   DO save_detail
   DO update_data

   IF lVerificar THEN
      IF .NOT. WEXIST("verify_pri")
         DEFINE WINDOW verify_pri ;
            FROM 03,00 ;
            TO 21,79 ;
            TITLE "Verificaci¢n de Precios de Venta" ;
            SYSTEM ;
            CLOSE ;
            NOFLOAT ;
            GROW ;
            MDI ;
            NOMINIMIZE ;
            SHADOW ;
            ZOOM ;
            COLOR SCHEME 15
      ENDIF


      ON KEY LABEL "F3" DO editpric.spr

      BROWSE WINDOW verify_pri FIELDS ;
         calc_f0 = LEFT(articulo, 12  )      :R:12:H = "C¢digo", ;
         calc_f1 = LEFT(maesprod.nombre, 40) :R:40:H = "Descripci¢n" :W = .F. ,;
         pventag1                            :R:9:H = "Lista 1"  :P = "9,999,999" ,;
         old_pvg1                            :R:9:H = "Anterior" :P = "9,999,999" ,;
         pventag2                            :R:9:H = "Lista 2"  :P = "9,999,999" ,;
         old_pvg2                            :R:9:H = "Anterior" :P = "9,999,999" ,;
         pventag3                            :R:9:H = "Lista 3"  :P = "9,999,999" ,;
         old_pvg3                            :R:9:H = "Anterior" :P = "9,999,999" ,;
         pventag4                            :R:9:H = "Lista 4"  :P = "9,999,999" ,;
         old_pvg4                            :R:9:H = "Anterior" :P = "9,999,999" ,;
         pventag5                            :R:9:H = "Lista 5"  :P = "9,999,999" ,;
         old_pvg5                            :R:9:H = "Anterior" :P = "9,999,999" ;
         NODELETE NOAPPEND NOMODIFY
      ON KEY LABEL "F3"
      RELEASE WINDOW verify_pri
   ENDIF

   SELECT det_temp
   SCAN ALL
      SELECT maesprod
      SET ORDER TO 1
      IF SEEK(det_temp.articulo)
         REPLACE fecucompra WITH det_temp.fecucompra, ;
                 proveedor  WITH cabecomp.proveedor, ;
                 vigente    WITH .T., ;
                 lprecio    WITH .T., ;
                 pcostog    WITH det_temp.pcostog, ;
                 pcostog2   WITH det_temp.pcostog2, ;
                 pcostod    WITH ROUND(det_temp.pcostod, 2), ;
                 pventag1   WITH det_temp.pventag1, ;
                 pventag2   WITH det_temp.pventag2, ;
                 pventag3   WITH det_temp.pventag3, ;
                 pventag4   WITH det_temp.pventag4, ;
                 pventag5   WITH det_temp.pventag5, ;
                 pventad1   WITH det_temp.pventad1, ;
                 pventad2   WITH det_temp.pventad2, ;
                 pventad3   WITH det_temp.pventad3, ;
                 pventad4   WITH det_temp.pventad4, ;
                 pventad5   WITH det_temp.pventad5
      ENDIF
      SELECT det_temp
   ENDSCAN

   SELECT det_temp
   USE
   DELETE FILE arch_temp + ".dbf"

   SELECT cabecomp

   STORE .F. to plAdding, plEditing
   CLEAR READ
*ENDPROC

*--------------------------------------------------------------------------*
FUNCTION yes_no
   PARAMETER cText, lAllowEsc

   PRIVATE cReply, lReturn
   STORE SPACE(1) TO cReply

   DO WHILE .T.
      WAIT cText TO cReply WINDOW
      cReply = UPPER(cReply)

      IF INLIST(cReply, "S", "N") THEN
         EXIT
      ENDIF

      IF lAllowEsc THEN
         IF LASTKEY() = 27 THEN
            EXIT
         ENDIF
      ENDIF
   ENDDO

   DO CASE
      CASE cReply = "S"
         lReturn = .T.
      CASE cReply = "N" .OR. LASTKEY() = 27
         lReturn = .F.
   ENDCASE

   RETURN (lReturn)
*ENDFUNC

*--------------------------------------------------------------------------*
PROCEDURE save_header
   DO CASE
      CASE INLIST(m.tipodocu, 1, 3, 4, 5, 7)   && Contado
         INSERT INTO cabecomp (tipodocu, nrodocu, fechadocu, proveedor, moneda, ;
                               tipocambio, qty_cuotas, porcdesc, importdesc, ;
                               descuento, monto_fact, monto_ndeb, monto_ncre, ;
                               monto_pago, consignaci, id_local) ;
            VALUES (m.tipodocu, m.nrodocu, CTOD(m.fechadocu), m.proveedor, ;
                    m.moneda, m.tipocambio, 0, m.porcdesc, m.importdesc, ;
                    m.descuento, m.monto_fact, 0, 0, 0, .F., control.id_local)
      CASE INLIST(m.tipodocu, 2, 6, 8)   && Crdito
         PRIVATE nContador, nMontoFact
         STORE 0 TO nContador, nMontoFact

         FOR nContador = 1 TO ALEN(paQtyCuota)
            nMontoFact = nMontoFact + VAL(STRTRAN(SUBSTR(paQtyCuota[nContador], 20, 14), ",", ""))
         ENDFOR

         IF nMontoFact <> m.monto_fact THEN
            WAIT "LA SUMA DE LAS CUOTAS ES DIFERENTE AL TOTAL DE LA COMPRA !" WINDOW
            _CUROBJ = OBJNUM(lstQtyCuotas)
            RETURN
         ENDIF

         INSERT INTO cabecomp (tipodocu, nrodocu, fechadocu, proveedor, moneda, ;
                               tipocambio, qty_cuotas, porcdesc, importdesc, ;
                               descuento, monto_fact, monto_ndeb, monto_ncre, ;
                               monto_pago, consignaci, id_local) ;
            VALUES (m.tipodocu, m.nrodocu, CTOD(m.fechadocu), m.proveedor, ;
                    m.moneda, m.tipocambio, pnQtyCuotas, m.porcdesc, m.importdesc, ;
                    m.descuento, m.monto_fact, 0, 0, 0, ;
                    IIF(m.consignaci = "S", .T., .F.), control.id_local)

         */ Actualiza el saldo del proveedor */
         SELECT proveedo
         SET ORDER TO 1
         IF SEEK(cabecomp.proveedor) THEN
            DO CASE
               CASE cabecomp.moneda = 1
                  REPLACE saldo_actu WITH (saldo_actu + cabecomp.monto_fact)
               CASE cabecomp.moneda = 2
                  REPLACE saldo_usd  WITH (saldo_usd  + cabecomp.monto_fact)
               OTHERWISE
                  WAIT "EL SALDO DEL PROVEEDOR NO SE HA ACTUALIZADO" + CHR(13) + ;
                       "PORQUE LA MONEDA NO ES GUARANIES NI DOLARES"
            ENDCASE
         ELSE
            WAIT WINDOW "ERROR, EL SALDO DEL PROVEEDOR NO HA SIDO ACTUALIZADO !"
         ENDIF

         */ Graba las cuotas */
         SELECT cuotas_c
         FOR nContador = 1 TO ALEN(paQtyCuota, 1)
            INSERT INTO cuotas_c (tipodocu, nrodocu, proveedor, tipo, nrocuota, ;
                                  fecha, importe, abonado, monto_ndeb, monto_ncre, ;
                                  id_local) ;
               VALUES (m.tipodocu, m.nrodocu, m.proveedor, 2, ;
                       VAL(SUBSTR(paQtyCuota[nContador], 1, 3)) , ;
                       CTOD(SUBSTR(paQtyCuota[nContador], 7, 10)) , ;
                       VAL(STRTRAN(SUBSTR(paQtyCuota[nContador], 20, 14), ",", "")), ;
                       0, 0, 0, control.id_local)
         ENDFOR
   ENDCASE
*ENDPROC

*--------------------------------------------------------------------------*
PROCEDURE save_detail
   PRIVATE nPrecio
   STORE 0 TO nPrecio

   SELECT tmpdetcomp
   SCAN ALL
      IF .NOT. (EMPTY(articulo) .OR. EMPTY(cantidad) .OR. EMPTY(precio)) THEN
         IF INLIST(m.tipodocu, 3, 7, 8) THEN
            nPrecio = ROUND(tmpdetcomp.precio / (1 + tmpdetcomp.pimpuesto / 100), 4)
         ELSE
            nPrecio = tmpdetcomp.precio
         ENDIF

         INSERT INTO detacomp (tipodocu, nrodocu, proveedor, articulo, ;
                               cantidad, precio, pdescuento, impuesto, ;
                               pimpuesto, id_local) ;
            VALUES (m.tipodocu, m.nrodocu, m.proveedor, tmpdetcomp.articulo, ;
                    tmpdetcomp.cantidad, nPrecio, tmpdetcomp.pdescuento, ;
                    tmpdetcomp.impuesto, tmpdetcomp.pimpuesto, control.id_local)

         */ Actualiza el stock de art¡culos */
         SELECT maesprod
         SET ORDER TO 1
         IF SEEK(detacomp.articulo)
            REPLACE stock_actu WITH (stock_actu + detacomp.cantidad)
         ENDIF
         SELECT tmpdetcomp
      ENDIF
   ENDSCAN
*ENDPROC

*--------------------------------------------------------------------------*
PROCEDURE update_data
   arch_temp = "tm" + RIGHT(SYS(3), 6)

   SELECT maesprod
   SET ORDER TO 1

   SELECT 0
   CREATE TABLE &arch_temp ;
     (articulo   C(15), ;
      precio     N(13,4),;
      pdescuento N(7,4),;
      pcostog    N(13,4),;
      pcostog2   N(13,4),;
      pcostod    N(13,4),;
      pventag1   N(13,4),;
      pventag2   N(13,4),;
      pventag3   N(13,4),;
      pventag4   N(13,4),;
      pventag5   N(13,4),;
      pventad1   N(13,4),;
      pventad2   N(13,4),;
      pventad3   N(13,4),;
      pventad4   N(13,4),;
      pventad5   N(13,4),;
      old_pvg1   N(13,4),;
      old_pvg2   N(13,4),;
      old_pvg3   N(13,4),;
      old_pvg4   N(13,4),;
      old_pvg5   N(13,4),;
      old_pvd1   N(13,4),;
      old_pvd2   N(13,4),;
      old_pvd3   N(13,4),;
      old_pvd4   N(13,4),;
      old_pvd5   N(13,4),;
      fecucompra D(8),;
      familia    N(4))

   USE &arch_temp ALIAS det_temp EXCLUSIVE
   SET RELATION TO articulo INTO maesprod

   SELECT detacomp
   SET ORDER TO 1
   IF SEEK(STR(m.tipodocu, 1) + STR(m.nrodocu, 9) + STR(m.proveedor, 5)) THEN
      SCAN WHILE m.tipodocu = tipodocu .AND. ;
                 m.nrodocu  = nrodocu  .AND. m.proveedor = proveedor
         INSERT INTO det_temp (articulo, precio, pdescuento) ;
            VALUES (detacomp.articulo, detacomp.precio, detacomp.pdescuento)
      ENDSCAN
   ENDIF

   SELECT det_temp
   SCAN ALL
      REPLACE pcostog    WITH maesprod.pcostog, ;
              pcostog2   WITH maesprod.pcostog2, ;
              pcostod    WITH maesprod.pcostod, ;
              fecucompra WITH maesprod.fecucompra, ;
              old_pvg1   WITH maesprod.pventag1, ;
              old_pvg2   WITH maesprod.pventag2, ;
              old_pvg3   WITH maesprod.pventag3, ;
              old_pvg4   WITH maesprod.pventag4, ;
              old_pvg5   WITH maesprod.pventag5, ;
              old_pvd1   WITH maesprod.pventad1, ;
              old_pvd2   WITH maesprod.pventad2, ;
              old_pvd3   WITH maesprod.pventad3, ;
              old_pvd4   WITH maesprod.pventad4, ;
              old_pvd5   WITH maesprod.pventad5,;
              familia    WITH maesprod.familia
      DO calc_cost_prices
      IF lActualizar THEN
         DO calc_sale_prices
      ELSE
         REPLACE pventag1   WITH maesprod.pventag1, ;
                 pventag2   WITH maesprod.pventag2, ;
                 pventag3   WITH maesprod.pventag3, ;
                 pventag4   WITH maesprod.pventag4, ;
                 pventag5   WITH maesprod.pventag5, ;
                 pventad1   WITH maesprod.pventad1, ;
                 pventad2   WITH maesprod.pventad2, ;
                 pventad3   WITH maesprod.pventad3, ;
                 pventad4   WITH maesprod.pventad4, ;
                 pventad5   WITH maesprod.pventad5
      ENDIF
   ENDSCAN
*ENDPROC

*--------------------------------------------------------------------------*
PROCEDURE calc_cost_prices
   PRIVATE mpcostog, mporc_desc
   STORE 0 TO mpcostog, mporc_desc

   SELECT det_temp
   IF cabecomp.fechadocu >= fecucompra THEN
      REPLACE fecucompra WITH cabecomp.fechadocu
      IF cabecomp.porcdesc >= 0
         IF cabecomp.porcdesc = 0 .AND. cabecomp.importdesc = 0 THEN
            IF cabecomp.moneda <> 1 THEN
               REPLACE pcostog WITH ROUND(precio * (1 - pdescuento / 100) * ;
                                    cabecomp.tipocambio, 2)
               mpcostog = ROUND(precio * cabecomp.tipocambio, 0)
            ELSE
               REPLACE pcostog WITH ROUND(precio * (1 - pdescuento / 100), 0)
               mpcostog = ROUND(precio, 0)
            ENDIF

            IF lDescuento THEN
               REPLACE pcostog2 WITH 0
            ELSE
               REPLACE pcostog2 WITH mpcostog
            ENDIF

            REPLACE pcostod  WITH IIF(control.tipocambio > 0, ROUND(pcostog / ;
                                  control.tipocambio, 2), 0)
         ELSE
            IF cabecomp.porcdesc > 0 .OR. cabecomp.importdesc > 0 THEN
               IF cabecomp.porcdesc > 0 THEN
                  mporc_desc = cabecomp.porcdesc
               ELSE
                  mporc_desc = cabecomp.descuento
               ENDIF

               IF cabecomp.moneda <> 1
                  REPLACE pcostog WITH ROUND((ROUND(precio * (1 - pdescuento / ;
                                       100), 3) * ((100 - mporc_desc) / 100)) * ;
                                       cabecomp.tipocambio, 0)
                  mpcostog = ROUND(precio * cabecomp.tipocambio, 0)

                  */ Graba el precio de costo sin incluir el descuento para utilizarlo en
                  */ la actualizacion de precios */
                  IF lDescuento THEN
                     REPLACE pcostog2 WITH 0
                  ELSE
                     REPLACE pcostog2 WITH mpcostog
                  ENDIF
               ELSE
                  REPLACE pcostog WITH (ROUND(precio * (1 - pdescuento / ;
                                       100), 0) * ((100 - mporc_desc) / 100))
                  mpcostog = ROUND(precio, 0)

                  */ Graba el precio de costo sin incluir el descuento para utilizarlo en
                  */ la actualizacion de precios */
                  IF lDescuento THEN
                     REPLACE pcostog2 WITH 0
                  ELSE
                     REPLACE pcostog2 WITH mpcostog
                  ENDIF
               ENDIF
               REPLACE pcostod WITH IIF(control.tipocambio > 0, ROUND(pcostog / ;
                                    control.tipocambio, 2), 0)
            ENDIF
         ENDIF
      ENDIF
   ENDIF
*ENDPROC


*--------------------------------------------------------------------------*
PROCEDURE calc_sale_prices
   SELECT familias
   SET ORDER TO 1

   IF SEEK(det_temp.familia) THEN
      IF det_temp.pcostog > 0 THEN
         SELECT det_temp
         *-------------------------------------------------------------------
         IF familias.p1 = 0
            REPLACE pventag1 WITH 0, ;
                    pventad1 WITH 0
         ELSE
            REPLACE pventag1 WITH ROUND(IIF(lDescuento, pcostog, pcostog2) * (1 + familias.p1 / 100), 0)
         ENDIF
         IF pventag1 > 0 THEN
            m.pventag1 = ROUND(pventag1, 0)
            IF RIGHT(STR(m.pventag1), 2) > "00" .AND. ;
               RIGHT(STR(m.pventag1), 2) < "50"
               m.pventag1 = (m.pventag1 - VAL(RIGHT(STR(m.pventag1), 2)) + 50)
            ELSE
               IF RIGHT(STR(m.pventag1), 2) <= "99" .AND. ;
                  RIGHT(STR(m.pventag1), 2) > "50"
                  m.pventag1 = (m.pventag1 - VAL(RIGHT(STR(m.pventag1), 2)) + 100)
               ENDIF
            ENDIF

            REPLACE pventag1 WITH ROUND(m.pventag1, 0) ,;
                    pventad1 WITH IIF(control.tipocambio > 0, ROUND(pventag1 / control.tipocambio, 2), 0)
         ENDIF
         *-------------------------------------------------------------------
         IF familias.p2 = 0 THEN
            REPLACE pventag2 WITH 0 ,;
                    pventad2 WITH 0
         ELSE
            REPLACE pventag2 WITH ROUND(IIF(lDescuento, pcostog, pcostog2) * (1 + (familias.p2 / 100)), 0)
         ENDIF
         IF pventag2 > 0 THEN
            REPLACE pventad2 WITH IIF(control.tipocambio > 0, ROUND(pventag2 / control.tipocambio, 2), 0)
         ENDIF
         *-------------------------------------------------------------------
*        if det_temp.lista3
            IF familias.p3 = 0 THEN
               replace pventag3 WITH 0
               replace pventad3 WITH 0
            else
               replace pventag3 WITH round(IIF(lDescuento, pcostog, pcostog2) * (1 + (familias.p3 / 100)), 0)
            endif
*        else
*           replace pventag3 WITH 0
*           replace pventad3 WITH 0
*        endif
         if pventag3 > 0
            replace pventad3 WITH IIF(control.tipocambio > 0, round(pventag3/control.tipocambio, 2), 0)
         endif
         *-------------------------------------------------------------------
*        if det_temp.lista4
            if familias.p4 = 0
               replace pventag4 WITH 0
               replace pventad4 WITH 0
            else
               replace pventag4 WITH round(IIF(lDescuento, pcostog, pcostog2) * (1 + (familias.p4 / 100)), 0)
            endif
*        else
*           replace pventag4 WITH 0
*           replace pventad4 WITH 0
*        endif
         if pventag4 > 0
            replace pventad4 WITH IIF(control.tipocambio > 0, round(pventag4 / control.tipocambio, 2), 0)
         endif
         *-------------------------------------------------------------------
*        if det_temp.lista5
            if familias.p5 = 0
               replace pventag5 WITH 0
               replace pventad5 WITH 0
            else
               replace pventag5 WITH round(IIF(lDescuento, pcostog, pcostog2) * (1 + (familias.p5 / 100)), 0)
            endif
*        else
*           replace pventag5 WITH 0
*           replace pventad5 WITH 0
*        endif
         if pventag5 > 0
            replace pventad5 WITH IIF(control.tipocambio > 0, round(pventag5/control.tipocambio, 2), 0)
         endif
      *-------------------------------------------------------------------
      endif
   else
      WAIT WINDOW "EL ARTICULO: " + det_temp.articulo + " " + ALLTRIM(maesprod.nombre) + " NO TIENE FAMILIA !"
   endif
*ENDPROC

FUNCTION _Cuotas
PARAMETER pnQtyCuotas, pnInterval

PRIVATE mdec_pos
mdec_pos = IIF(m.moneda = 1, 0, 2)

if pnEntrInicial > 0
   DIMENSION paQtyCuota[pnQtyCuotas + 1]
else
   DIMENSION paQtyCuota[pnQtyCuotas]
endif

FOR pnCounter = 1 to (pnQtyCuotas + IIF(pnEntrInicial = 0, 0, 1))
   if pnEntrInicial > 0 .AND. pnCounter = 1
      paQtyCuota[pnCounter] = STR(pnCounter, 3) + " ³ " + DTOC(CTOD(m.fechadocu)) + " ³ " + TRANSFORM(pnEntrInicial, "999,999,999.99")
   else
      if pnCounter = (pnQtyCuotas + IIF(pnEntrInicial = 0, 0, 1))
         paQtyCuota[pnCounter] = STR(pnCounter, 3) + " ³ " + DTOC(CTOD(m.fechadocu) + (pnInterval * (pnCounter + IIF(pnEntrInicial = 0, 0, -1)))) + " ³ " + TRANSFORM(m.monto_fact - pnEntrInicial - ;
         (round((m.monto_fact - pnEntrInicial) / pnQtyCuotas, mdec_pos) * (pnQtyCuotas - 1)), "999,999,999.99")
      else
         paQtyCuota[pnCounter] = STR(pnCounter, 3) + " ³ " + DTOC(CTOD(m.fechadocu) + (pnInterval * (pnCounter + IIF(pnEntrInicial = 0, 0, -1)))) + " ³ " + TRANSFORM(round((m.monto_fact - pnEntrInicial) / pnQtyCuotas, mdec_pos), "999,999,999.99")
      endif
   endif
ENDFOR

pnCount = ALEN(paQtyCuota, 1)

FOR pnCounter = 1 to pnCount
   if VAL(STRTRAN(SUBSTR(paQtyCuota[pnCounter], 20, 14), ",", "")) = 0
      pnCount = pnCount - 1
   endif
ENDFOR

DIMENSION paQtyCuota[pnCount]

SHOW GETS

FUNCTION delete_invoice

PUSH KEY CLEAR

*-- Borra la(s) cuota(s) de la compra.
select cuotas_c
set order to TAG indice1 OF cuotas_c.cdx

if seek(STR(cabecomp.tipodocu, 1) + STR(cabecomp.nrodocu, 9))
   SCAN WHILE STR(cabecomp.tipodocu, 1) + STR(cabecomp.nrodocu, 9) = STR(cuotas_c.tipodocu, 1) + STR(cuotas_c.nrodocu, 9)
      DELETE
   endscan
endif

*-- Borra detalle de la compra y actualiza la existencia de mercader¡as.
select detacomp
set order to TAG indice1 OF detacomp.cdx

if seek(STR(cabecomp.tipodocu, 1) + STR(cabecomp.nrodocu, 9) + STR(cabecomp.proveedor, 5))
   SCAN WHILE STR(cabecomp.tipodocu, 1) + STR(cabecomp.nrodocu, 9) + STR(cabecomp.proveedor, 5)= STR(detacomp.tipodocu, 1) + STR(detacomp.nrodocu, 9) + STR(detacomp.proveedor, 5)
      select maesprod
      set order to TAG indice1 OF maesprod.cdx

      if seek(detacomp.articulo)
         replace maesprod.stock_actu WITH maesprod.stock_actu - detacomp.cantidad
      else
         WAIT WINDOW "­ IMPOSIBLE ACTUALIZAR EL ARTICULO: " + ALLTRIM(detacomp.articulo) + " !"
      endif
      select detacomp
      DELETE
   endscan
else
   if cabecomp.tipodocu <> 0 .AND. cabecomp.nrodocu <> 0
      WAIT WINDOW "­ NO SE HA ENCONTRADO DETALLE A BORRAR !"
   endif
endif

*-- Actualiza el saldo del proveedor, si es una compra a crdito.
if INLIST(cabecomp.tipodocu, 2, 8)
   select proveedo
   if seek(cabecomp.proveedor)
     if cabecomp.moneda = 1
         replace saldo_actu WITH (saldo_actu - cabecomp.monto_fact)
     else
         replace saldo_usd  WITH (saldo_usd  - cabecomp.monto_fact)
     endif
   endif
endif

*-- Borra el encabezado del comprobante de venta.
select cabecomp
set order to TAG indice1 OF cabecomp.cdx

if seek(STR(m.tipodocu, 1) + STR(m.nrodocu, 9))
   SCAN WHILE STR(m.tipodocu, 1) + STR(m.nrodocu, 9) = STR(cabecomp.tipodocu, 1) + STR(cabecomp.nrodocu, 9)
      DELETE
   endscan
endif

POP KEY

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAL           pnQtyCuotas VALID                  ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   12  ³
*       ³ Variable:            pnQtyCuotas                        ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Field                              ³
*       ³ Snippet Number:      1                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtal     &&  pnQtyCuotas VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 28, 127)
   RETURN .F.
ELSE
   IF LASTKEY()= 27
      RETURN
   ENDIF
ENDIF

IF pnQtyCuotas <= 0
   WAIT WINDOW "­ LA CANTIDAD DE CUOTAS DEBE SER MAYOR QUE CERO !"
   RETURN .F.
ENDIF

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAM           pnInterval VALID                   ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   13  ³
*       ³ Variable:            pnInterval                         ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Field                              ³
*       ³ Snippet Number:      2                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtam     &&  pnInterval VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF pnInterval < 0
   WAIT WINDOW "­ LA CANTIDAD DE DIAS DEBE SER MAYOR O IGUAL QUE CERO !"
   RETURN .F.
ENDIF

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAN           pnEntrInicial VALID                ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   14  ³
*       ³ Variable:            pnEntrInicial                      ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Field                              ³
*       ³ Snippet Number:      3                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtan     &&  pnEntrInicial VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF pnEntrInicial < 0
   WAIT WINDOW "­ LA ENTREGA INICIAL DEBE SER MAYOR O IGUAL QUE CERO !"
   RETURN .F.
ENDIF

IF NOT EMPTY(pnEntrInicial)
   DO _Cuotas WITH pnQtyCuotas, pnInterval
   _CUROBJ = OBJNUM(m.save)
ENDIF

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAO           m.consignaci WHEN                  ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   15  ³
*       ³ Variable:            m.consignaci                       ³
*       ³ Called By:           WHEN Clause                        ³
*       ³ Object Type:         Field                              ³
*       ³ Snippet Number:      4                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtao     &&  m.consignaci WHEN
#REGION 1
IF NOT EMPTY(pnEntrInicial)
   RETURN .F.
ENDIF

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAP           m.consignaci VALID                 ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   15  ³
*       ³ Variable:            m.consignaci                       ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Field                              ³
*       ³ Snippet Number:      5                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtap     &&  m.consignaci VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF NOT INLIST(m.consignaci, "S", "N")
   WAIT WINDOW "­ CONSIGNACION DEBE SER (S)I o (N)O !"
   RETURN .F.
ENDIF

DO _Cuotas WITH pnQtyCuotas, pnInterval
_CUROBJ = OBJNUM(m.save)

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAQ           lstQtyCuotas VALID                 ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   16  ³
*       ³ Variable:            lstQtyCuotas                       ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         List                               ³
*       ³ Snippet Number:      6                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtaq     &&  lstQtyCuotas VALID
#REGION 1
PRIVATE m.nrocuota, m.fecha, m.importe

m.nrocuota = VAL(SUBSTR(paQtyCuota[lstQtyCuotas], 1, 3))
m.fecha    = SUBSTR(paQtyCuota[lstQtyCuotas], 7, 10)
m.importe  = VAL(STRTRAN(SUBSTR(paQtyCuota[lstQtyCuotas], 20, 14), ",", ""))

DO cuotas.spr

paQtyCuota[lstQtyCuotas] = STR(m.nrocuota, 3) + " ³ " + m.fecha + " ³ " + TRANSFORM(m.importe, "999,999,999.99")

_CUROBJ = OBJNUM(lstQtyCuotas)



*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAR           m.save VALID                       ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   17  ³
*       ³ Variable:            m.save                             ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Push Button                        ³
*       ³ Snippet Number:      7                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtar     &&  m.save VALID
#REGION 1
DO save_invoice


*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAS           m.cancel VALID                     ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   18  ³
*       ³ Variable:            m.cancel                           ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Push Button                        ³
*       ³ Snippet Number:      8                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtas     &&  m.cancel VALID
#REGION 1
CLEAR READ

*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAT           m.edit VALID                       ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   19  ³
*       ³ Variable:            m.edit                             ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Push Button                        ³
*       ³ Snippet Number:      9                                  ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtat     &&  m.edit VALID
#REGION 1
PRIVATE m.nrocuota, m.fecha, m.importe

m.nrocuota = VAL(SUBSTR(paQtyCuota[lstQtyCuotas], 1, 3))
m.fecha    = SUBSTR(paQtyCuota[lstQtyCuotas], 7, 10)
m.importe  = VAL(STRTRAN(SUBSTR(paQtyCuota[lstQtyCuotas], 20, 14), ",", ""))

DO cuotas.spr

paQtyCuota[lstQtyCuotas] = STR(m.nrocuota, 3) + " ³ " + m.fecha + " ³ " + TRANSFORM(m.importe, "999,999,999.99")

_CUROBJ = OBJNUM(lstQtyCuotas)



*       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*       ³                                                         ³
*       ³ _59E0OJTAU           m.gethelp VALID                    ³
*       ³                                                         ³
*       ³ Function Origin:                                        ³
*       ³                                                         ³
*       ³ From Platform:       MS-DOS                             ³
*       ³ From Screen:         CUOTCOMP,     Record Number:   20  ³
*       ³ Variable:            m.gethelp                          ³
*       ³ Called By:           VALID Clause                       ³
*       ³ Object Type:         Push Button                        ³
*       ³ Snippet Number:      10                                 ³
*       ³                                                         ³
*       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*
FUNCTION _59e0ojtau     &&  m.gethelp VALID
#REGION 1
HELP ş Cuotas de Ventas