*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё 01/23/18              A_02.SPR                 08:18:58 Ё
*       Ё                                                         Ё
*       цддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
*       Ё                                                         Ё
*       Ё Nombre del autor                                        Ё
*       Ё                                                         Ё
*       Ё Copyright (c) 2018 Nombre de la empresa                 Ё
*       Ё Direcci╒n                                               Ё
*       Ё Ciudad,     C.P.                                        Ё
*       Ё Pa║s                                              Ё
*       Ё                                                         Ё
*       Ё Description:                                            Ё
*       Ё Este programa lo ha generado autom═ticamente GENSCRN.    Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё             MS-DOS Definiciones de ventana              Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

IF NOT WEXIST("_5450htojn")
	DEFINE WINDOW _5450htojn ;
		FROM INT((SROW()-18)/2),INT((SCOL()-43)/2) ;
		TO INT((SROW()-18)/2)+17,INT((SCOL()-43)/2)+42 ;
		NOFLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		COLOR SCHEME 1
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё     A_02/MS-DOS C╒digo de configuraci╒n - SECCION 2     Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
PUSH KEY CLEAR

PRIVATE pnSelect, pcOrder, pnRecNo, pnCount, lstLocales, paLocales

pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

SELECT locales
COUNT TO pnCount FOR vigente .AND. .NOT. EMPTY(directory)

IF EMPTY(pnCount)
   DIMENSION paLocales(1, 3)
   paLocales = ""
ELSE
   DIMENSION paLocales(pnCount, 3)
   COPY TO ARRAY paLocales FIELDS codigo, nombre, directory FOR vigente  .AND. .NOT. EMPTY(directory)
   =ASORT(paLocales, AELEMENT(paLocales, 1, 1))
ENDIF

SELECT (pnSelect)
SET ORDER TO TAG (pcOrder)
IF pnRecNo <> 0
   GOTO RECORD pnRecNo
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё          A_02/MS-DOS Distribuci╒n de pantalla           Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
IF WVISIBLE("_5450htojn")
	ACTIVATE WINDOW _5450htojn SAME
ELSE
	ACTIVATE WINDOW _5450htojn NOSHOW
ENDIF
@ 4,8 GET lstLocales ;
 	PICTURE "@&N" ;
	FROM paLocales ;
	RANGE 2 ;
	SIZE 9,24 ;
	DEFAULT 1 ;
	VALID _5450htojs() ;
	COLOR SCHEME 14
@ 3,7 TO 13,32 DOUBLE ;
	COLOR W/N     
@ 15,11 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR R/W     
@ 15,26 SAY "ESC" ;
	SIZE 1,3, 0 ;
	COLOR R/W     
@ 15,0 SAY "    ENTER <" ;
	SIZE 1,11, 0 ;
	COLOR R/W     
@ 15,29 SAY " Cancela    " ;
	SIZE 1,12, 0 ;
	COLOR N/W     
@ 15,12 SAY " Seleciona    " ;
	SIZE 1,14, 0 ;
	COLOR N/W     
@ 3,8 SAY "Elija el local de origen" ;
	SIZE 1,24, 0 ;
	COLOR W+/N    
@ 1,0 TO 1,40
@ 0,4 SAY "ACTUALIZACION DE PRECIOS DE COSTO" ;
	SIZE 1,33, 0 ;
	COLOR G+/N    

IF NOT WVISIBLE("_5450htojn")
	ACTIVATE WINDOW _5450htojn
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё      MS-DOSREAD contiene cl═usulas de SCREEN a_02       Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

READ CYCLE ;
	MODAL COLOR , W+/BG

RELEASE WINDOW _5450htojn

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё             A_02/MS-DOS C╒digo de limpieza              Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
POP KEY


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё   A_02/MS-DOS Procedimientos y funciones de soporte     Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
PROCEDURE _updMaesprod
PRIVATE pnCounter, pcAreYouSure, pcUpdate, pcSys16, pcProgram, pcPriorDir, pcActual, pcExterno

IF ALLTRIM(SYS(5) + CURDIR()) == ALLTRIM(paLocales(lstLocales, 3))
   WAIT WINDOW "╜ EL LOCAL SELECCIONADO DEBE SER DISTINTO AL ACTUAL !"
   RETURN
ENDIF

DO WHILE .T.
   WAIT WINDOW "╗ ESTA UD. SEGURO [S/N] ?" TO pcAreYouSure

   IF INLIST(UPPER(pcAreYouSure), "S", "N")
      EXIT DO
   ENDIF
ENDDO

IF UPPER(pcAreYouSure) = "N"
   RETURN
ENDIF

WAIT WINDOW "CREANDO TABLA TEMPORAL..." NOWAIT

*-- MS-DOS Base de datos, ║ndices, relaciones.
SELECT 0
temp01 = "tm" + RIGHT(SYS(3), 6) + ".dbf"
CREATE TABLE &temp01 (codigo     C(15) ,;
                      codigo2    C(15) ,;
                      codorig    C(15) ,;
                      nombre     C(40) ,;
                      aplicacion M ,;
                      lista3     L(01) ,;
                      lista4     L(01) ,;
                      lista5     L(01) ,;
                      familia    N(04) ,;
                      rubro      N(04) ,;
                      subrubro   N(04) ,;
                      marca      N(04) ,;
                      unidad     N(03) ,;
                      proveedor  N(05) ,;
                      procedenci N(04) ,;
                      vigente    L(01) ,;
                      lprecio    L(01) ,;
                      impuesto   L(01) ,;
                      pimpuesto  N(06,2) ,;
                      pcostog    N(13,4) ,;
                      pcostog2   N(13,4) ,;
                      updprices  L(01) ,;
                      pcostog_ex N(13,4) ,;
                      pcostod    N(13,4) ,;
                      pcostod2   N(13,4) ,;
                      pventag1   N(13,4) ,;
                      pventag2   N(13,4) ,;
                      pventag3   N(13,4) ,;
                      pventag4   N(13,4) ,;
                      pventag5   N(13,4) ,;
                      pventad1   N(13,4) ,;
                      pventad2   N(13,4) ,;
                      pventad3   N(13,4) ,;
                      pventad4   N(13,4) ,;
                      stock_min  N(11,2) ,;
                      stock_max  N(11,2) ,;
                      polinvsmin L(01) ,;
                      polinvsmax L(01) ,;
                      caracter1  C(60) ,;
                      caracter2  C(60) ,;
                      caracter3  C(60) ,;
                      otros1     C(60) ,;
                      otros2     C(60) ,;
                      fecucompra D(08) ,;
                      fecucompr2 D(08) ,;
                      fecrepo    D(08) ,;
                      stock_actu N(11,2) ,;
                      id_local   N(02) ,;
                      nuevo      L(01) ,;
                      rec_type   N(01))

* Nomenclatura del campo REC_TYPE
* -------------------------------
* 1. Registro con fecha de ёltima compra m═s reciente.
* 2. Registro nuevo.
* 3. Registro con fecha de modificaci╒n m═s reciente.
* 4. Registro con fecha de ёltima compra m═s reciente, pero con precios de venta no actualizados.

USE &temp01 ALIAS tmpmaesprod EXCLUSIVE

INDEX ON codigo      TAG indice1
INDEX ON nombre      TAG indice2
INDEX ON rubro       TAG indice3
INDEX ON subrubro    TAG indice4
INDEX ON marca       TAG indice5
INDEX ON codigo2     TAG indice6
INDEX ON codorig     TAG indice7
INDEX ON val(codigo) TAG indice8
INDEX ON familia     TAG indice9
INDEX ON nombre      TAG indice10 for vigente
INDEX ON codigo      TAG indice11 for vigente
INDEX ON codigo2     TAG indice12 for vigente
INDEX ON codorig     TAG indice13 for vigente

IF USED(ALLTRIM(paLocales(lstLocales, 3)) + "maesprod2")
   SELECT maesprod2
   SET ORDER TO TAG indice1
ELSE
   SELECT 0
   USE (LOCFILE(ALLTRIM(paLocales(lstLocales, 3)) + "maesprod.dbf", "DBF", "╗ D╒nde est═ MAESPROD.DBF ?")) ;
      AGAIN ALIAS maesprod2 SHARED ;
      ORDER TAG indice1
ENDIF
GO TOP

pnCounter = 1

SCAN ALL
   WAIT WINDOW "PROCESANDO LA TABLA DE ARTICULOS: " + ALLTRIM(TRANSFORM(pnCounter, "9,999,999")) + "/" + ALLTRIM(TRANSFORM(RECCOUNT(), "9,999,999")) NOWAIT

   SELECT maesprod
   SET ORDER TO TAG indice1 OF maesprod.cdx

   IF SEEK(maesprod2.codigo)
      *-- Registro con fecha de ёltima compra m═s reciente.
      IF maesprod2.fecucompra > maesprod.fecucompra
         SELECT maesprod2
            SCATTER MEMVAR MEMO
         SELECT tmpmaesprod
            APPEND BLANK
            GATHER MEMVAR MEMO

         REPLACE pcostog    WITH maesprod.pcostog
         REPLACE pcostog_ex WITH maesprod2.pcostog
         REPLACE fecucompra WITH maesprod.fecucompra
         REPLACE fecucompr2 WITH maesprod2.fecucompra

         IF maesprod2.updprices
            REPLACE rec_type WITH 4
         ELSE
            REPLACE rec_type WITH 1
         ENDIF

      ELSE
         *-- Registro con fecha de modificaci╒n m═s reciente.
         IF maesprod2.fecrepo > maesprod.fecrepo
            SELECT maesprod2
               SCATTER MEMVAR MEMO
            SELECT tmpmaesprod
               APPEND BLANK
               GATHER MEMVAR MEMO

            REPLACE pcostog    WITH maesprod.pcostog
            REPLACE pcostog_ex WITH maesprod2.pcostog
            REPLACE fecucompra WITH maesprod.fecucompra
            REPLACE fecucompr2 WITH maesprod2.fecucompra
            REPLACE rec_type   WITH 3
         ENDIF
      ENDIF
   ELSE
      *-- Registro nuevo.
      SELECT maesprod2
         SCATTER MEMVAR MEMO
      SELECT tmpmaesprod
         APPEND BLANK
         GATHER MEMVAR MEMO

      REPLACE nuevo      WITH .T.
      REPLACE pcostog    WITH 0
      REPLACE pcostog_ex WITH maesprod2.pcostog
      REPLACE fecucompra WITH {}
      REPLACE fecucompr2 WITH maesprod2.fecucompra
      REPLACE rec_type   WITH 2
   ENDIF

   SELECT maesprod2
   pnCounter = pnCounter + 1
ENDSCAN

WAIT CLEAR

SELECT tmpmaesprod
SET ORDER TO TAG indice1

IF RECCOUNT() > 0
   HIDE WINDOW (WONTOP())

   *-- MS-DOS Definiciones de ventanas.
   IF .NOT. WEXIST("tmpmaesprod")
      DEFINE WINDOW tmpmaesprod ;
         FROM 04,00 ;
         TO 24,79 ;
         TITLE ALLTRIM(STR(RECCOUNT(), 5)) + " ARTICULOS CON VARIACION DE PRECIO DE COSTO" ;
         SYSTEM ;
         CLOSE ;
         NOFLOAT ;
         GROW ;
         MDI ;
         NOMINIMIZE ;
         SHADOW ;
         ZOOM ;
         COLOR SCHEME 15
   ENDIF

   GO TOP

   IF .NOT. nuevo
      WAIT WINDOW nombre + " Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) NOWAIT
   ELSE
      WAIT WINDOW nombre + "Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) + "Ё NUEVO"  NOWAIT
   ENDIF

   *-- MS-DOS Macros de teclado.
   ON KEY LABEL "UPARROW" DO _PriorRecord
   ON KEY LABEL "DNARROW" DO _NextRecord

   *-- Determina el nombre del local actual.
   pcSys16    = SYS(16, 0)
   pcProgram  = SUBSTR(pcSys16, RAT("\", pcSys16) + 1)
   pcPriorDir = SUBSTR(pcSys16, RAT("\", pcSys16, 2) + 1, RAT("\", pcSys16) - RAT("\", pcSys16, 2) - 1)

   IF pcPriorDir = "INTEGRAD.000"
      *-- Casa Central.
      pcActual = "(Central)"
   ELSE
      IF pcPriorDir = "INTEGRAD.CON"
         *-- Consolidado.
         pcActual = "(Consol.)"
      ELSE
         IF LEFT(pcPriorDir, AT(".", pcPriorDir, 1) - 1) = "INTEGRAD"
            *-- Sucursal
            pcActual = "(Suc. " + RIGHT(pcPriorDir, LEN(pcPriorDir) - AT(".", pcPriorDir) - 1) + ")"
         ENDIF
      ENDIF
   ENDIF

   *-- Determina el nombre del local externo.
   pcPriorDir = SUBSTR(paLocales(lstLocales, 3), RAT("\", paLocales(lstLocales, 3), 2) + 1, RAT("\", paLocales(lstLocales, 3)) - RAT("\", paLocales(lstLocales, 3), 2) - 1)

   IF pcPriorDir = "INTEGRAD.000"
      *-- Casa Central.
      pcExterno = "(Central)"
   ELSE
      IF pcPriorDir = "INTEGRAD.CON"
         *-- Consolidado.
         pcExterno = "(Consol.)"
      ELSE
         IF LEFT(pcPriorDir, AT(".", pcPriorDir, 1) - 1) = "INTEGRAD"
            *-- Sucursal
            pcExterno = "(Suc. " + RIGHT(pcPriorDir, LEN(pcPriorDir) - AT(".", pcPriorDir) - 1) + ")"
         ENDIF
      ENDIF
   ENDIF

   BROWSE WINDOW tmpmaesprod FIELDS ;
      calc_f1 = SUBSTR(codigo, 1, 15) + SPACE(3) :R:18:H = "Art║culo" ,;
      pcostog    :R:21:H = "P.Costo Gs. " + pcActual :P = "9999,999,999,999.9999" ,;
      pcostog_ex :R:21:H = "P.Costo Gs. " + pcExterno :P = "9999,999,999,999.9999" ,;
      calc_f2 = IIF(.NOT. nuevo, IIF(pcostog <> 0, ABS(ROUND((pcostog - pcostog_ex) * 100 / pcostog, 2)), 100), 0) :R:11:H = "% Variaci╒n" :P = "9999,999.99" ,;
      calc_f3 = IIF(.NOT. nuevo, IIF(pcostog > pcostog_ex, "", IIF(pcostog < pcostog_ex, "", IIF(pcostog = pcostog_ex, "=", " "))), "Ч") :R:01:H = "" ;
      NODELETE NOAPPEND NOMODIFY

   *-- MS-DOS Restablece macros de teclado.
   ON KEY LABEL "UPARROW"
   ON KEY LABEL "DNARROW"

   SHOW WINDOW (WOUTPUT())

   DO WHILE .T.
      WAIT WINDOW "╗ DESEA ACTUALIZAR LOS PRECIOS [S/N] ?" TO pcUpdate

      IF INLIST(UPPER(pcUpdate), "S", "N")
         EXIT DO
      ENDIF
   ENDDO

   IF UPPER(pcUpdate) = "S"
      SELECT tmpmaesprod
      GO TOP

      pnCounter = 1

      SCAN ALL
         WAIT WINDOW "PROCESANDO LA TABLA TEMPORAL: " + ALLTRIM(TRANSFORM(pnCounter, "9,999,999")) + "/" + ALLTRIM(TRANSFORM(RECCOUNT(), "9,999,999")) NOWAIT

         SELECT maesprod
         SET ORDER TO TAG indice1 OF maesprod

         IF SEEK(tmpmaesprod.codigo)
            IF tmpmaesprod.rec_type = 1      &&  Registro con fecha de ёltima compra m═s reciente.
               SELECT maesprod
                  REPLACE pcostog    WITH tmpmaesprod.pcostog_ex
                  REPLACE pcostog2   WITH tmpmaesprod.pcostog2
                  REPLACE fecucompra WITH tmpmaesprod.fecucompr2
            ELSE
               IF INLIST(tmpmaesprod.rec_type, 3, 4)   &&  Registro con fecha de modificaci╒n m═s reciente o Registro con fecha de ёltima compra m═s reciente, pero con precios de venta no actualizados.
                  SELECT tmpmaesprod
                     SCATTER MEMVAR MEMO
                  SELECT maesprod
                     GATHER MEMVAR MEMO

                  REPLACE pcostog    WITH tmpmaesprod.pcostog_ex
                  REPLACE pcostog2   WITH tmpmaesprod.pcostog2
                  REPLACE fecucompra WITH tmpmaesprod.fecucompr2
               ENDIF
            ENDIF
         ELSE
            *-- Agrega nuevo registro.
            SELECT tmpmaesprod
               SCATTER MEMVAR MEMO
            SELECT maesprod
               APPEND BLANK
               GATHER MEMVAR MEMO

            REPLACE pcostog    WITH tmpmaesprod.pcostog_ex
            REPLACE pcostog2   WITH tmpmaesprod.pcostog2
            REPLACE fecucompra WITH tmpmaesprod.fecucompr2
            REPLACE stock_actu WITH 0
            REPLACE stock_ot   WITH 0
         ENDIF

*         WAIT WINDOW "maesprod " + maesprod.codigo + IIF(maesprod.updprices, "Si", "No")

*         WAIT WINDOW "maesprod2 " + maesprod2.codigo + IIF(maesprod2.updprices, "Si", "No")

*         WAIT WINDOW "tmpmaesprod " + tmpmaesprod.codigo + IIF(tmpmaesprod.updprices, "Si", "No") + STR(TMPMAESPROD.REC_TYPE)

         IF maesprod.updprices
            DO _updPrices
         ENDIF

         SELECT tmpmaesprod
         pnCounter = pnCounter + 1
      ENDSCAN

      ? CHR(7)
      ? CHR(7)
      ? CHR(7)

      WAIT WINDOW "╜ PROCESO DE ACTUALIZACION CONCLUIDO !" TIMEOUT 1.75
   ENDIF
ELSE
   WAIT WINDOW "╜ PROCESO CONCLUIDO: NO SE HAN ENCONTRADO VARIACIONES DE PRECIO !"
ENDIF

*-- MS-DOS Cierre de Bases de Datos.
IF USED("maesprod2")
   SELECT maesprod2
   USE
ENDIF

IF USED("tmpmaespro")
   SELECT tmpmaespro
   USE
ENDIF

DELETE FILE &temp01
DELETE FILE SUBSTR(temp01, 1, ATC(".", temp01)) + "CDX"

*-- Elimina ventanas.
IF WEXIST("tmpmaesprod")
   RELEASE WINDOW tmpmaesprod
ENDIF

PROCEDURE _NextRecord
PUSH KEY CLEAR

IF .NOT. EOF()
   SKIP 1
   IF EOF()
      SKIP -1
   ENDIF
ENDIF

IF .NOT. nuevo
   WAIT WINDOW nombre + " Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) NOWAIT
ELSE
   WAIT WINDOW nombre + "Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) + "Ё NUEVO"  NOWAIT
ENDIF

POP KEY

PROCEDURE _PriorRecord
PUSH KEY CLEAR

IF .NOT. BOF()
   SKIP -1
   IF BOF()
      GO TOP
   ENDIF
ENDIF

IF .NOT. nuevo
   WAIT WINDOW nombre + " Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) NOWAIT
ELSE
   WAIT WINDOW nombre + "Ё " + DTOC(fecucompra) + " Ё " + DTOC(fecucompr2) + "Ё NUEVO"  NOWAIT
ENDIF

POP KEY

PROCEDURE _updPrices

SELECT familias
SET ORDER TO TAG indice1 OF familias.cdx

IF SEEK(maesprod.familia)
   IF maesprod.pcostog > 0
      SELECT maesprod
      REPLACE pcostod WITH IIF(control.tipocambio > 0, ROUND(pcostog/control.tipocambio, 3), 0)
      *-------------------------------------------------------------------
      IF familias.p1 = 0
         REPLACE pventag1 WITH 0
      ELSE
         REPLACE pventag1 WITH ROUND(IIF(pcostog2 <> 0, pcostog2, pcostog) * (1 + familias.p1 / 100), 0)
      ENDIF
      IF pventag1 > 0
         m.pventag1 = ROUND(pventag1 + IIF(impuesto, pventag1 * (pimpuesto / 100), 0), 0)
         IF RIGHT(STR(m.pventag1), 2) > "00" .AND. ;
            RIGHT(STR(m.pventag1), 2) < "50"
            m.pventag1 = (m.pventag1 - VAL(RIGHT(STR(m.pventag1), 2)) + 50)
         ELSE
            IF RIGHT(STR(m.pventag1), 2) <= "99" .AND. ;
               RIGHT(STR(m.pventag1), 2) > "50"
               m.pventag1 = (m.pventag1 - VAL(RIGHT(STR(m.pventag1), 2)) + 100)
            ENDIF
         ENDIF

         REPLACE pventag1 WITH ROUND(m.pventag1 / (1 + pimpuesto / 100), 0)
         REPLACE pventad1 WITH IIF(control.tipocambio > 0, ROUND(pventag1 / control.tipocambio, 3), 0)
      ENDIF
      *-------------------------------------------------------------------
      IF familias.p2 = 0
         REPLACE pventag2 WITH 0
      ELSE
         REPLACE pventag2 WITH ROUND(IIF(pcostog2 <> 0, pcostog2, pcostog) * (1 + (familias.p2 / 100)), 0)
      ENDIF
      IF pventag2 > 0
         REPLACE pventad2 WITH IIF(control.tipocambio > 0, ROUND(pventag2 / control.tipocambio, 3), 0)
      ENDIF
      *-------------------------------------------------------------------
      IF maesprod.lista3
         IF familias.p3 = 0
            REPLACE pventag3 WITH 0
         ELSE
            REPLACE pventag3 WITH ROUND(IIF(pcostog2 <> 0, pcostog2, pcostog) * (1 + (familias.p3 / 100)), 0)
         ENDIF
      ENDIF
      IF pventag3 > 0
         REPLACE pventad3 WITH IIF(control.tipocambio > 0, ROUND(pventag3/control.tipocambio, 3), 0)
      ENDIF
      *-------------------------------------------------------------------
      IF maesprod.lista4
         IF familias.p4 = 0
            REPLACE pventag4 WITH 0
         ELSE
            REPLACE pventag4 WITH ROUND(IIF(pcostog2 <> 0, pcostog2, pcostog) * (1 + (familias.p4 / 100)), 0)
         ENDIF
      ENDIF
      IF pventag4 > 0
         REPLACE pventad4 WITH IIF(control.tipocambio > 0, ROUND(pventag4 / control.tipocambio, 3), 0)
      ENDIF
      *-------------------------------------------------------------------
      IF maesprod.lista5
         IF familias.p5 = 0
            REPLACE pventag5 WITH 0
         ELSE
            REPLACE pventag5 WITH ROUND(IIF(pcostog2 <> 0, pcostog2, pcostog) * (1 + (familias.p5 / 100)), 0)
         ENDIF
      ENDIF
      IF pventag5 > 0
          REPLACE pventad5 WITH IIF(control.tipocambio > 0, ROUND(pventag5/control.tipocambio, 3), 0)
      ENDIF
      *-------------------------------------------------------------------
   ENDIF
ELSE
   WAIT WINDOW "EL ARTICULO: " + ALLTRIM(maesprod.codigo) + " Ё " + ALLTRIM(maesprod.nombre) + " Ё NO TIENE FAMILIA !"
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _5450HTOJS           lstLocales VALID                   Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         A_02,     Record Number:    2      Ё
*       Ё Variable:            lstLocales                         Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         List                               Ё
*       Ё Snippet Number:      1                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _5450htojs     &&  lstLocales VALID
#REGION 1
IF LASTKEY() <> 27
   IF .NOT. EMPTY(paLocales(lstLocales, 1))
      DO _updMaesprod
   ENDIF
ENDIF