*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё 07/05/18              L_61.SPR                 16:18:07 Ё
*       Ё                                                         Ё
*       цддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
*       Ё                                                         Ё
*       Ё Nombre del autor                                        Ё
*       Ё                                                         Ё
*       Ё Copyright (c) 2018 Nombre de la empresa                 Ё
*       Ё Direcci╒n                                               Ё
*       Ё Ciudad,     C.P.                                        Ё
*       Ё Pa║s                                              Ё
*       Ё                                                         Ё
*       Ё Description:                                            Ё
*       Ё Este programa lo ha generado autom═ticamente GENSCRN.    Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё             MS-DOS Definiciones de ventana              Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

IF NOT WEXIST("_58o0yxvc6")
	DEFINE WINDOW _58o0yxvc6 ;
		FROM INT((SROW()-20)/2),INT((SCOL()-65)/2) ;
		TO INT((SROW()-20)/2)+19,INT((SCOL()-65)/2)+64 ;
		TITLE " Estad║stica de Ventas " ;
		NOFLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		COLOR SCHEME 1
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё     L_61/MS-DOS C╒digo de configuraci╒n - SECCION 2     Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1

m.rubro     = -1
m.subrubro  = -1
m.marca     = -1
m.cliente = -1
pnMes       = MONTH(DATE())
pnAnyo      = YEAR(DATE())
m.impuesto  = "S"
m.destino   = "P"

*-- Determina el nombre del local actual.
pcSys16    = SYS(16, 0)
pcProgram  = SUBSTR(pcSys16, RAT("\", pcSys16) + 1)
pcPriorDir = SUBSTR(pcSys16, RAT("\", pcSys16, 2) + 1, RAT("\", pcSys16) - RAT("\", pcSys16, 2) - 1)

IF pcPriorDir = "INTEGRAD.000"
   *-- Casa Central.
   pcLocal = ALLTRIM(control.empresa) + " - CASA CENTRAL"
ELSE
   IF pcPriorDir = "INTEGRAD.CON"
      *-- Consolidado.
      pcLocal = ALLTRIM(control.empresa) + " - CONSOLIDADO"
   ELSE
      IF LEFT(pcPriorDir, AT(".", pcPriorDir, 1) - 1) = "INTEGRAD"
         *-- Sucursal
         pcLocal = ALLTRIM(control.empresa) + " - SUC. " + RIGHT(pcPriorDir, LEN(pcPriorDir) - AT(".", pcPriorDir) - 1)
      ENDIF
   ENDIF
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё          L_61/MS-DOS Distribuci╒n de pantalla           Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
IF WVISIBLE("_58o0yxvc6")
	ACTIVATE WINDOW _58o0yxvc6 SAME
ELSE
	ACTIVATE WINDOW _58o0yxvc6 NOSHOW
ENDIF
@ 15,0 TO 15,62
@ 3,2 SAY "SUB-RUBRO:" ;
	SIZE 1,10, 0
@ 5,2 SAY "MARCA....:" ;
	SIZE 1,10, 0
@ 1,2 SAY "RUBRO....:" ;
	SIZE 1,10, 0
@ 12,2 SAY "DESTINO (P)ANTALLA o (I)MPRESORA.:" ;
	SIZE 1,34, 0
@ 9,2 SAY "MES/A╔O..:" ;
	SIZE 1,10, 0
@ 9,15 SAY "/" ;
	SIZE 1,1, 0
@ 14,2 TO 14,60 PANEL
@ 14,22 SAY " -1" ;
	SIZE 1,3, 0 ;
	COLOR R/W     
@ 14,25 SAY " incluye todo  " ;
	SIZE 1,15, 0 ;
	COLOR N/W     
@ 11,2 SAY "INCLUIR IMPUESTOS [S/N]..........:" ;
	SIZE 1,34, 0
@ 1,13 GET m.rubro ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	VALID _58o0yxvc9()
@ 3,13 GET m.subrubro ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	VALID _58o0yxvcc()
@ 5,13 GET m.marca ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	VALID _58o0yxvce()
@ 7,13 GET m.cliente ;
	SIZE 1,5 ;
	DEFAULT 0 ;
	PICTURE "99999" ;
	VALID _58o0yxvch()
@ 9,13 GET pnMes ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	PICTURE "@L 99" ;
	VALID _58o0yxvci()
@ 9,16 GET pnAnyo ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	VALID _58o0yxvcj()
@ 11,37 GET m.impuesto ;
	SIZE 1,1 ;
	DEFAULT " " ;
	PICTURE "@A!" ;
	VALID _58o0yxvck()
@ 12,37 GET m.destino ;
	SIZE 1,1 ;
	DEFAULT " " ;
	PICTURE "@A!" ;
	VALID _58o0yxvcl()
@ 16,17 GET cmgChoice ;
	PICTURE "@*HN \!\<Procesar;\?\<Cancelar" ;
	SIZE 1,12,5 ;
	DEFAULT 1 ;
	VALID _58o0yxvcm()
@ 7,2 SAY "CLIENTE..:" ;
	SIZE 1,10, 0

IF NOT WVISIBLE("_58o0yxvc6")
	ACTIVATE WINDOW _58o0yxvc6
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё      MS-DOSREAD contiene cl═usulas de SCREEN l_61       Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

READ CYCLE ;
	SHOW _58o0yxvcn() ;
	MODAL COLOR , W+/BG

RELEASE WINDOW _58o0yxvc6

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё   L_61/MS-DOS Procedimientos y funciones de soporte     Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*

#REGION 1
PROCEDURE _Report_L_06
PRIVATE pnSelect, pcOrder, pnRecNo, pnCounter, temp01, temp02, pnAnyo01, pnAnyo02, pnAnyo03, expr01, expr02, expr03, expr04, pcCliente, pcRubro, pcSubRubro, pcMarca

pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

WAIT WINDOW "CREANDO TABLA TEMPORAL..." NOWAIT

*-- MS-DOS Definiciones de ventanas.
IF .NOT. WEXIST("preview")
   DEFINE WINDOW preview ;
      FROM 01,00 ;
      TO 23,79 ;
      TITLE "Vista Preliminar - ESC p/Salir" ;
      SYSTEM ;
      CLOSE ;
      NOFLOAT ;
      GROW ;
      MDI ;
      NOMINIMIZE ;
      SHADOW ;
      ZOOM ;
      COLOR SCHEME 15
ENDIF

*-- MS-DOS Base de datos, ║ndices, relaciones.
SELECT 0
temp01 = "tm" + RIGHT(SYS(3), 6) + ".dbf"
temp02 = "tm" + RIGHT(SYS(3), 6) + ".txt"

CREATE TABLE &temp01 (mes    N(02) ,;
                      nombre C(09) ,;
                      anyo   N(12,2) ,;
                      anyo01 N(12,2) ,;
                      anyo02 N(12,2) ,;
                      anyo03 N(12,2))

USE &temp01 ALIAS tmpcompras EXCLUSIVE

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (01, "Enero", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (02, "Febrero", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (03, "Marzo", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (04, "Abril", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (05, "Mayo", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (06, "Junio", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (07, "Julio", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (08, "Agosto", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (09, "Setiembre", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (10, "Octubre", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (11, "Noviembre", 0, 0, 0, 0)

INSERT INTO tmpcompras (mes, nombre, anyo, anyo01, anyo02, anyo03) ;
   VALUES (12, "Diciembre", 0, 0, 0, 0)


*-- Ordena las tablas.
SELECT maesprod
SET ORDER TO indice1 OF maesprod.cdx

SELECT familias
SET ORDER TO TAG indice1 OF familias.cdx

SELECT rubros1
SET ORDER TO TAG indice1 OF rubros1.cdx

SELECT rubros2
SET ORDER TO TAG indice1 OF rubros2.cdx

SELECT marcas1
SET ORDER TO TAG indice1 OF marcas1.cdx

SELECT unidad
SET ORDER TO TAG indice1 OF unidad.cdx

SELECT proceden
SET ORDER TO TAG indice1 OF proceden.cdx

SELECT clientes
SET ORDER TO TAG indice1 OF clientes.cdx

SELECT proveedo
SET ORDER TO TAG indice1 OF proveedo.cdx

SELECT cabevent
SET ORDER TO TAG indice3 OF cabevent.cdx

*-- Estable relaciones entre las tablas.
SELECT maesprod

SET RELATION TO maesprod.familia    INTO familias ADDITIVE
SET RELATION TO maesprod.rubro      INTO rubros1  ADDITIVE
SET RELATION TO maesprod.subrubro   INTO rubros2  ADDITIVE
SET RELATION TO maesprod.marca      INTO marcas1  ADDITIVE
SET RELATION TO maesprod.unidad     INTO unidad   ADDITIVE
SET RELATION TO maesprod.procedenci INTO proceden ADDITIVE
SET RELATION TO maesprod.proveedor  INTO proveedo ADDITIVE

SELECT cabevent
SET RELATION TO cabevent.cliente   INTO clientes ADDITIVE
SET RELATION TO cabevent.moneda    INTO monedas  ADDITIVE

SELECT detavent
SET RELATION TO detavent.articulo INTO maesprod ADDITIVE

pnAnyo01 = pnAnyo - 1
pnAnyo02 = pnAnyo - 2
pnAnyo03 = pnAnyo - 3

*-- Genera las condiciones que deben cumplir los registro.
expr01 = IIF(m.rubro     = -1, ".T.", "maesprod.rubro     = m.rubro")
expr02 = IIF(m.subrubro  = -1, ".T.", "maesprod.subrubro  = m.subrubro")
expr03 = IIF(m.marca     = -1, ".T.", "maesprod.marca     = m.marca")
expr04 = IIF(m.cliente = -1, ".T.", "cabevent.cliente = m.cliente")

pnCounter = 1

SELECT cabevent
GO TOP

SCAN ALL
   WAIT WINDOW "PROCESANDO LA TABLA DE COMPRAS: " + ALLTRIM(TRANSFORM(pnCounter, "9,999,999")) + "/" + ALLTRIM(TRANSFORM(RECCOUNT(), "9,999,999")) NOWAIT

   IF &expr04
      IF (INLIST(YEAR(cabevent.fechadocu), pnAnyo01, pnAnyo02, pnAnyo03)) .OR. ;
         (YEAR(cabevent.fechadocu) = pnAnyo .AND. MONTH(cabevent.fechadocu) <= pnMes)
         SELECT detavent
         IF SEEK(STR(cabevent.tipodocu, 1) + STR(cabevent.nrodocu, 7))
            SCAN WHILE STR(cabevent.tipodocu, 1) + STR(cabevent.nrodocu, 7) = STR(detavent.tipodocu, 1) + STR(detavent.nrodocu, 7)
               IF &expr01 .AND. &expr02 .AND. &expr03
                  SELECT tmpcompras
                  m.mes = MONTH(cabevent.fechadocu)
                  LOCATE FOR tmpcompras.mes = m.mes
                  IF FOUND()

                     *-- Calcula el importe neto de la compra.
                     IF cabevent.porcdesc >= 0
                        IF cabevent.porcdesc = 0 .AND. cabevent.importdesc = 0
                           IF cabevent.moneda <> 1     && Guaran║es.
                              IF m.impuesto = "S" .AND. detavent.impuesto
                                 pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 + detavent.pimpuesto / 100) * cabevent.tipocambio, 0)
                              ELSE
                                 pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * cabevent.tipocambio, 0)
                              ENDIF
                           ELSE
                              IF m.impuesto = "S" .AND. detavent.impuesto
                                 pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 + detavent.pimpuesto / 100), 0)
                              ELSE
                                 pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100), 0)
                              ENDIF
                           ENDIF
                        ELSE
                           IF cabevent.porcdesc > 0
                              IF cabevent.moneda <> 1     && Guaran║es.
                                 IF m.impuesto = "S" .AND. detavent.impuesto
                                    pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.porcdesc / 100) * (1 + detavent.pimpuesto / 100) * cabevent.tipocambio, 0)
                                 ELSE
                                    pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.porcdesc / 100) * cabevent.tipocambio, 0)
                                 ENDIF
                              ELSE
                                 IF m.impuesto = "S" .AND. detavent.impuesto
                                    pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.porcdesc / 100) * (1 + detavent.pimpuesto / 100), 0)
                                 ELSE
                                    pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.porcdesc / 100), 0)
                                 ENDIF
                              ENDIF
                           ELSE
                              IF cabevent.importdesc > 0
                                 IF cabevent.moneda <> 1     && Guaran║es.
                                    IF m.impuesto = "S" .AND. detavent.impuesto
                                       pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.descuento / 100) * (1 + detavent.pimpuesto / 100) * cabevent.tipocambio, 0)
                                    ELSE
                                       pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.descuento / 100) * cabevent.tipocambio, 0)
                                    ENDIF
                                 ELSE
                                    IF m.impuesto = "S" .AND. detavent.impuesto
                                       pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.descuento / 100) * (1 + detavent.pimpuesto / 100) + 0.5, 0)
                                    ELSE
                                       pnImporte = ROUND(detavent.precio * detavent.cantidad * (1 - detavent.pdescuento / 100) * (1 - cabevent.descuento / 100) + 0.5, 0)
                                    ENDIF
                                 ENDIF
                              ENDIF
                           ENDIF
                        ENDIF
                     ENDIF

                     DO CASE
                        CASE YEAR(cabevent.fechadocu) = pnAnyo
                           REPLACE tmpcompras.anyo   WITH tmpcompras.anyo   + pnImporte
                        CASE YEAR(cabevent.fechadocu) = pnAnyo01
                           REPLACE tmpcompras.anyo01 WITH tmpcompras.anyo01 + pnImporte
                        CASE YEAR(cabevent.fechadocu) = pnAnyo02
                           REPLACE tmpcompras.anyo02 WITH tmpcompras.anyo02 + pnImporte
                        CASE YEAR(cabevent.fechadocu) = pnAnyo03
                           REPLACE tmpcompras.anyo03 WITH tmpcompras.anyo03 + pnImporte
                     ENDCASE
                  ENDIF
                  SELECT detavent
               ENDIF
            ENDSCAN
         ELSE
            WAIT WINDOW "NO SE ENCONTRO EL DETALLE DE LA VENTA N╖: " + STR(cabevent.tipodocu, 1) + "/" + ALLTRIM(STR(cabevent.nrodocu, 7))
         ENDIF
      ENDIF
   ENDIF
   pnCounter = pnCounter + 1
ENDSCAN

WAIT CLEAR

*-- Obtiene los nombre de los par═metros
IF m.cliente = -1
   pcCliente = "TODOS (-1)"
ELSE
   SELECT clientes
   IF SEEK(m.cliente)
      pcCliente = ALLTRIM(clientes.nombre) + " (" + ALLTRIM(STR(clientes.codigo, 5)) + ")"
   ENDIF
ENDIF

IF m.rubro = -1
   pcRubro = "TODOS (-1)"
ELSE
   SELECT rubros1
   IF SEEK(m.rubro)
      pcRubro = ALLTRIM(rubros1.nombre) + " (" + ALLTRIM(STR(rubros1.codigo, 4)) + ")"
   ENDIF
ENDIF

IF m.subrubro = -1
   pcSubRubro = "TODOS (-1)"
ELSE
   SELECT rubros2
   IF SEEK(m.subrubro)
      pcSubRubro = ALLTRIM(rubros2.nombre) + " (" + ALLTRIM(STR(rubros2.codigo, 4)) + ")"
   ENDIF
ENDIF

IF m.marca = -1
   pcMarca = "TODOS (-1)"
ELSE
   SELECT marcas1
   IF SEEK(m.marca)
      pcMarca = ALLTRIM(marcas1.nombre) + " (" + ALLTRIM(STR(marcas1.codigo, 4)) + ")"
   ENDIF
ENDIF

SELECT tmpcompras

IF m.destino = "P"     && Vista Preliminar.
   REPORT FORM l_61.frx TO &temp02 NOCONSOLE

*   ACTIVATE WINDOW preview
*   MODIFY COMMAND &temp02 WINDOW preview NOMODIFY
*   RELEASE WINDOW preview
*   DELETE FILE &temp02

*  ACTIVATE WINDOW preview
*  MODIFY COMMAND &temp02 WINDOW preview NOMODIFY
   DO lister.prg WITH (temp02)
   RELEASE WINDOW preview
   DELETE FILE &temp02

ENDIF

IF m.destino = "I"     && Imprimir.
   IF .NOT. PRINTSTATUS()
      ?? CHR(7)
      WAIT WINDOW "╜ ASEGURESE DE QUE LA IMPRESORA ESTA CONECTADA Y ENCENDIDA !"
   ELSE
      WAIT WINDOW "IMPRIMIENDO..." NOWAIT

      PRIVATE pcPageAdvance

      IF _PADVANCE = "FORMFEED"
         _PADVANCE = "LINEFEEDS"
         pcPageAdvance = "FORMFEED"
      ELSE
         pcPageAdvance = "LINEFEEDS"
      ENDIF

      REPORT FORM l_61.frx TO PRINTER NOCONSOLE

      IF pcPageAdvance = "FORMFEED"
         _PADVANCE = "FORMFEED"
      ENDIF

      WAIT CLEAR
   ENDIF
ENDIF

*-- MS-DOS C╒digo de Limpieza.
IF USED("tmpcompras")
   SELECT tmpcompras
   USE
ENDIF

DELETE FILE &temp01
DELETE FILE SUBSTR(temp01, 1, ATC(".", temp01)) + "CDX"

*-- Quiebra las relaciones entre las tablas.
SELECT maesprod
SET ORDER TO TAG indice1 OF maesprod.cdx

SET RELATION OFF INTO familias
SET RELATION OFF INTO rubros1
SET RELATION OFF INTO rubros2
SET RELATION OFF INTO marcas1
SET RELATION OFF INTO unidad
SET RELATION OFF INTO proceden
SET RELATION OFF INTO clientes
SET RELATION OFF INTO proveedo


SELECT cabevent
SET RELATION OFF INTO clientes
SET RELATION OFF INTO monedas

SELECT detavent
SET RELATION OFF INTO maesprod

IF WEXIST("preview")
   RELEASE WINDOW preview
ENDIF

IF .NOT. EMPTY(ALIAS(pnSelect))
   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF
ENDIF

SHOW GETS

FUNCTION _clcPercent
PRIVATE pnReturnedValue

IF mes <= pnMes
   IF .NOT. (anyo = 0 .AND. anyo01 = 0)
      IF anyo = 0 .AND. anyo01 <> 0
         pnReturnedValue = ROUND((anyo - anyo01) * 100 / anyo01, 2)
      ELSE
         IF anyo <> 0 .AND. anyo01 = 0
            pnReturnedValue = 100
         ELSE
            pnReturnedValue = ROUND((anyo - anyo01) * 100 / anyo01, 2)
         ENDIF
      ENDIF
   ELSE
      pnReturnedValue = 0
   ENDIF
ELSE
   pnReturnedValue = 0
ENDIF

RETURN (pnReturnedValue)

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVC9           m.rubro VALID                      Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   13      Ё
*       Ё Variable:            m.rubro                            Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      1                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvc9     &&  m.rubro VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 28, 127)
   RETURN .F.
ELSE
   IF LASTKEY() = 27
      RETURN
   ENDIF
ENDIF

IF m.rubro = -1
   @ 01,20 SAY PADR("TODOS", 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   RETURN
ENDIF

IF m.rubro <= 0
   @ 01,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   DO rub1_pop.spr WITH "m.rubro", 0, .F.
ENDIF

IF m.rubro = 0
   RETURN .F.
ENDIF

PRIVATE pnSelect, pcOrder, pnRecNo

pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

SELECT rubros1
SET ORDER TO TAG indice1 OF rubros1.cdx

IF SEEK(m.rubro)
   @ 01,20 SAY PADR(ALLTRIM(rubros1.nombre), 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N

   IF .NOT. rubros1.vigente
      WAIT WINDOW "╜ CODIGO DE RUBRO NO VIGENTE !"
      @ 01,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF

ELSE
   @ 01,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   WAIT WINDOW "╜ CODIGO DE RUBRO INEXISTENTE !"
   DO rub1_pop.spr WITH "m.rubro", 0, .F.
   SHOW GETS

   SELECT rubros1
   SET ORDER TO TAG indice1 OF rubros1.cdx

   IF SEEK(m.rubro)
      @ 01,20 SAY PADR(ALLTRIM(rubros1.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 01,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF
ENDIF

IF .NOT. EMPTY(ALIAS(pnSelect))
   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCC           m.subrubro VALID                   Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   14      Ё
*       Ё Variable:            m.subrubro                         Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      2                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvcc     &&  m.subrubro VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF m.subrubro = -1
   @ 03,20 SAY PADR("TODOS", 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   RETURN
ENDIF

IF m.subrubro <= 0
   @ 03,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   DO rub2_pop.spr WITH "m.subrubro", 0, .F.
ENDIF

IF m.subrubro = 0
   RETURN .F.
ENDIF

PRIVATE pnSelect, pcOrder, pnRecNo

pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

SELECT rubros2
SET ORDER TO TAG indice1 OF rubros2.cdx

IF SEEK(m.subrubro)
   @ 03,20 SAY PADR(ALLTRIM(rubros2.nombre), 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N

   IF .NOT. rubros2.vigente
      WAIT WINDOW "╜ CODIGO DE SUB-RUBRO NO VIGENTE !"
      @ 03,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF

ELSE
   @ 03,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   WAIT WINDOW "╜ CODIGO DE SUB-RUBRO INEXISTENTE !"
   DO rub2_pop.spr WITH "m.subrubro", 0, .F.
   SHOW GETS

   SELECT rubros2
   SET ORDER TO TAG indice1 OF rubros2.cdx

   IF SEEK(m.subrubro)
      @ 03,20 SAY PADR(ALLTRIM(rubros2.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 03,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF
ENDIF

IF .NOT. EMPTY(ALIAS(pnSelect))
   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCE           m.marca VALID                      Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   15      Ё
*       Ё Variable:            m.marca                            Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      3                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvce     &&  m.marca VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF m.marca = -1
   @ 05,20 SAY PADR("TODOS", 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   RETURN
ENDIF

IF m.marca <= 0
   @ 05,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   DO mar1_pop.spr WITH "m.marca", 0, .F.
ENDIF

IF m.marca = 0
   RETURN .F.
ENDIF

PRIVATE pnSelect, pcOrder, pnRecNo

pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

SELECT marcas1
SET ORDER TO TAG indice1 OF marcas1.cdx

IF SEEK(m.marca)
   @ 05,20 SAY PADR(ALLTRIM(marcas1.nombre), 30, CHR(32)) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N

   IF .NOT. marcas1.vigente
      WAIT WINDOW "╜ CODIGO DE MARCA NO VIGENTE !"
      @ 05,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF

ELSE
   @ 05,20 SAY REPLICATE(CHR(32), 30) ;
      SIZE 1,30 ;
      PICTURE "@!" ;
      COLOR W/N
   WAIT WINDOW "╜ CODIGO DE MARCA INEXISTENTE !"
   DO mar1_pop.spr WITH "m.marca", 0, .F.
   SHOW GETS

   SELECT marcas1
   SET ORDER TO TAG indice1 OF marcas1.cdx

   IF SEEK(m.marca)
      @ 05,20 SAY PADR(ALLTRIM(marcas1.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 05,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N

      IF .NOT. EMPTY(ALIAS(pnSelect))
         SELECT (pnSelect)
         SET ORDER TO TAG (pcOrder)
         IF pnRecNo <> 0
            GOTO RECORD pnRecNo
         ENDIF
      ENDIF

      RETURN .F.
   ENDIF
ENDIF

IF .NOT. EMPTY(ALIAS(pnSelect))
   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCH           m.cliente VALID                    Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   16      Ё
*       Ё Variable:            m.cliente                          Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      4                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvch     &&  m.cliente VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF m.cliente = -1
   @ 07,20 SAY PADR("TODOS", 42, CHR(32)) ;
      SIZE 1,42 ;
      PICTURE "@!" ;
      COLOR W/N
   RETURN
ENDIF

IF m.cliente <= 0
   PUSH KEY CLEAR

   PRIVATE pnSelect
   pnSelect = SELECT()

   *-- Procedimiento de inspecci╒n de clientes.
   ON KEY LABEL "ENTER" KEYBOARD "{CTRL+W}"
   DO brwClien.prg
   ON KEY LABEL "ENTER"

   POP KEY

   SELECT (pnSelect)

   IF LASTKEY() <> 27
      m.cliente = clientes.codigo
      SHOW GET m.cliente
   ELSE
      RETURN .F.
   ENDIF

ENDIF

IF m.cliente = 0
   RETURN .F.
ENDIF

PRIVATE pnSelect, pcOrder, pnRecNo
pnSelect = SELECT()
pcOrder  = ORDER()
pnRecNo  = IIF(EOF(), 0, RECNO())

SELECT clientes
SET ORDER TO TAG indice1 OF clientes.cdx

IF SEEK(m.cliente)
   @ 07,20 SAY PADR(ALLTRIM(clientes.nombre), 42, CHR(32)) ;
      SIZE 1,42 ;
      PICTURE "@!" ;
      COLOR W/N
ELSE
   @ 07,20 SAY REPLICATE(CHR(32), 42) ;
      SIZE 1,42 ;
      PICTURE "@!" ;
      COLOR W/N

   WAIT WINDOW "╜ CODIGO DE CLIENTE INEXISTENTE !"

   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF

   RETURN .F.
ENDIF

IF .NOT. EMPTY(ALIAS(pnSelect))
   SELECT (pnSelect)
   SET ORDER TO TAG (pcOrder)
   IF pnRecNo <> 0
      GOTO RECORD pnRecNo
   ENDIF
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCI           pnMes VALID                        Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   17      Ё
*       Ё Variable:            pnMes                              Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      5                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvci     &&  pnMes VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF .NOT. BETWEEN(pnMes, 1, 12)
   WAIT WINDOW "EL MES DEBE ESTAR ENTRE 1 Y 12 !"
   RETURN .F.
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCJ           pnAnyo VALID                       Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   18      Ё
*       Ё Variable:            pnAnyo                             Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      6                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvcj     &&  pnAnyo VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF pnAnyo <= 0
   WAIT WINDOW "EL A╔O DEBE SER MAYOR QUE CERO !"
   RETURN .F.
ENDIF


*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCK           m.impuesto VALID                   Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   19      Ё
*       Ё Variable:            m.impuesto                         Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      7                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvck     &&  m.impuesto VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF .NOT. INLIST(m.impuesto, "S", "N")
   WAIT WINDOW "INCLUIR IMPUESTOS, DEBE SER (S)I o (N)O !"
   RETURN .F.
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCL           m.destino VALID                    Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   20      Ё
*       Ё Variable:            m.destino                          Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Field                              Ё
*       Ё Snippet Number:      8                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvcl     &&  m.destino VALID
#REGION 1
IF INLIST(LASTKEY(), 5, 19, 27, 127)
   RETURN
ENDIF

IF .NOT. INLIST(m.destino, "P", "I")
   WAIT WINDOW "DESTINO DEBE SER: (P)ANTALLA o (I)MPRESORA !"
   RETURN .F.
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCM           cmgChoice VALID                    Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61,     Record Number:   21      Ё
*       Ё Variable:            cmgChoice                          Ё
*       Ё Called By:           VALID Clause                       Ё
*       Ё Object Type:         Push Button                        Ё
*       Ё Snippet Number:      9                                  Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvcm     &&  cmgChoice VALID
#REGION 1
IF cmgChoice = 1
   DO _Report_L_06
   _CUROBJ = OBJNUM(m.rubro)
ENDIF

IF cmgChoice = 2
   CLEAR READ
ENDIF

*       зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
*       Ё                                                         Ё
*       Ё _58O0YXVCN           Nivel de lectura SHOW              Ё
*       Ё                                                         Ё
*       Ё Function Origin:                                        Ё
*       Ё                                                         Ё
*       Ё                                                         Ё
*       Ё From Platform:       MS-DOS                             Ё
*       Ё From Screen:         L_61                               Ё
*       Ё Called By:           READ Statement                     Ё
*       Ё Snippet Number:      10                                 Ё
*       Ё                                                         Ё
*       юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*
FUNCTION _58o0yxvcn     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* C╒digo SHOW de la pantalla: L_61
*
#REGION 1
m.rubro     = -1
m.subrubro  = -1
m.marca     = -1
m.cliente = -1
pnMes       = MONTH(DATE())
pnAnyo      = YEAR(DATE())
m.impuesto  = "S"
m.destino   = "P"

IF m.rubro > 0
   SELECT rubros1
   SET ORDER TO TAG indice1 OF rubros1.cdx

   IF SEEK(m.rubro)
      @ 01,20 SAY PADR(ALLTRIM(rubros1.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 01,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ELSE
   IF m.rubro = -1
      @ 01,20 SAY PADR("TODOS", 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 01,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ENDIF

IF m.subrubro > 0
   SELECT rubros2
   SET ORDER TO TAG indice1 OF rubros2.cdx

   IF SEEK(m.subrubro)
      @ 03,20 SAY PADR(ALLTRIM(rubros2.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 03,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ELSE
   IF m.subrubro = -1
      @ 03,20 SAY PADR("TODOS", 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 03,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ENDIF

IF m.marca > 0
   SELECT marcas1
   SET ORDER TO TAG indice1 OF marcas1.cdx

   IF SEEK(m.marca)
      @ 05,20 SAY PADR(ALLTRIM(marcas1.nombre), 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 05,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ELSE
   IF m.marca = -1
      @ 05,20 SAY PADR("TODOS", 30, CHR(32)) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 05,20 SAY REPLICATE(CHR(32), 30) ;
         SIZE 1,30 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ENDIF

IF m.cliente > 0
   SELECT proveedo
   SET ORDER TO TAG indice1 OF proveedo.cdx

   IF SEEK(m.cliente)
      @ 07,20 SAY PADR(ALLTRIM(proveedo.nombre), 40, CHR(32)) ;
         SIZE 1,40 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 07,20 SAY REPLICATE(CHR(32), 40) ;
         SIZE 1,40 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ELSE
   IF m.cliente = -1
      @ 07,20 SAY PADR("TODOS", 40, CHR(32)) ;
         SIZE 1,40 ;
         PICTURE "@!" ;
         COLOR W/N
   ELSE
      @ 07,20 SAY REPLICATE(CHR(32), 40) ;
         SIZE 1,40 ;
         PICTURE "@!" ;
         COLOR W/N
   ENDIF
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF